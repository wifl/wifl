<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
  xmlns:functx="http://www.functx.com"
  xmlns:wadl="http://wadl.dev.java.net/2009/02"
  stylesheet="../../../doc/xsl/expand-wadl.xsl">

  <x:scenario label="When expanding a wadl:application">
    <x:context mode="expand">
      <wadl:application>
        <wadl:grammars id="grammars1"/>
        <wadl:resources id="resources1"/>
        <wadl:resource_type id="resource_type1"/>
        <wadl:method id="method1"/>
        <wadl:param id="param1"/>
        <wadl:representation id="repn1"/>
      </wadl:application>
    </x:context>
    <x:expect label="preserve the application" test="count(wadl:application)=1"/>
    <x:expect label="preserve its grammars" test="count(wadl:application/wadl:grammars)=1"/>
    <x:expect label="preserve its resources" test="count(wadl:application/wadl:resources)=1"/>
    <x:expect label="discard its resource_types" test="count(wadl:application/wadl:resource_type)=0"/>
    <x:expect label="discard its methods" test="count(wadl:application/wadl:method)=0"/>
    <x:expect label="discard its params" test="count(wadl:application/wadl:param)=0"/>
    <x:expect label="discard its representations" test="count(wadl:application/wadl:representation)=0"/>
  </x:scenario>
  
  <x:scenario label="When expanding a resource with a @type">
    <x:context mode="expand">
      <wadl:application>
        <wadl:resources base="http://ex.com">
          <wadl:resource id="r1" type="#t1" path="pp1">
            <wadl:doc>Resource with a type.</wadl:doc>
            <wadl:param name="pp1" style="template" type="xs:int" required="true"/>
            <wadl:method name="GET">
              <wadl:request>
                <wadl:param name="qp1" style="query" type="xs:int"/>
              </wadl:request>
            </wadl:method>
          </wadl:resource>
        </wadl:resources>
	      <wadl:resource_type id="t1">
	        <wadl:doc>Resource type t1.</wadl:doc>
          <wadl:param name="t1p1" style="query">No identifier</wadl:param>
	        <wadl:method name="GET">
	          <wadl:param name="t1p2"/>
	        </wadl:method>
	        <wadl:method id="t1method1" name="PUT"/>
	        <wadl:resource>No identifier</wadl:resource>
	        <wadl:resource id="resource1"/>
	      </wadl:resource_type>
      </wadl:application>
    </x:context>
    <x:expect label="preserve its attributes, except type"
      test="//wadl:resource[1]/@id='http://ex.com#r1' and 
      //wadl:resource[1]/@path='pp1' and
      not(//wadl:resource[1][@type])"/>
    <x:expect label="preserve its docs, but not resource type's" 
      test="count(//wadl:resource[1]/wadl:doc)=1"/>
    <x:expect label="preserve its resource-level params"
      test="count(//wadl:resource[1]/wadl:param[1]/@name='pp1')=1"/>
    <x:expect label="inline resource_type's methods before resource's methods"
      test="//wadl:resource[1]/wadl:method[1]/@name='GET' and
      //wadl:resource[1]/wadl:method[2]/@id='http://ex.com#t1method1'"/>
    <x:expect label="preserve resource's methods"
      test="//wadl:resource[1]/wadl:method[3]/@name='GET'"/>
    <x:expect label="inline resource_type's params within inlined resource_type methods"
      test="//wadl:resource[1]/wadl:method[1]/wadl:request/wadl:param[1]/@name='t1p1' and
      //wadl:resource[1]/wadl:method[1]/wadl:request/wadl:param[2]/@name='t1p2' and
      //wadl:resource[1]/wadl:method[2]/wadl:request/wadl:param[1]/@name='t1p1'"/>
    <x:expect label="inlined resource_type's methods do not have inlined resource_type's params"
      test="count(//wadl:resource[1]/wadl:method[3]/wadl:request/wadl:param)=1
      and //wadl:resource[1]/wadl:method[3]/wadl:request/wadl:param/@name='qp1'"/>
  </x:scenario>
  
  <x:scenario label="When expanding a resource">
    <x:context mode="expand">
      <wadl:application>
        <wadl:resources>
	        <wadl:resource id="r1">
	          <wadl:doc>First</wadl:doc>
	          <wadl:doc>Second</wadl:doc>
	          <wadl:param href="#topP1"/>
	          <wadl:method href="#topM1"/>
	        </wadl:resource>
	        <wadl:resource id="r2">
	          <wadl:param href="#topP1"/>
	        </wadl:resource>
       </wadl:resources>
       <wadl:param id="topP1" style="query" name="topP1"/>
       <wadl:method id="topM1" name="GET"/>
      </wadl:application>
    </x:context>
    <x:expect label="preserve its attributes"
      test="count(wadl:application/wadl:resources[1]/wadl:resource[1]/@*)=1"/>
    <x:expect label="preserve its docs"
      test="count(wadl:application/wadl:resources[1]/wadl:resource[1]/wadl:doc)=2"/>
    <x:expect label="inline occurrences of href to params"
      test="wadl:application/wadl:resources[1]/wadl:resource[1]/wadl:param[1]/@id='#topP1' and
      wadl:application/wadl:resources[1]/wadl:resource[2]/wadl:param[1]/@id='#topP1'"/>
    <x:expect label="inline occurrences of href to methods"
      test="wadl:application/wadl:resources[1]/wadl:resource[1]/wadl:method[1]/@id='#topM1'"/>
  </x:scenario>
  
  <x:scenario label="When expanding method, param, and representation references">
    <x:context mode="expand">
      <wadl:application>
        <wadl:resources>
          <wadl:resource id="r1">
            <wadl:method href="#topM1"/>
            <wadl:param href="#topP1"/>
            <wadl:method name="GET">
              <wadl:request>
                <wadl:param id="GETP1"/>
              </wadl:request>
              <wadl:response status="200">
                <wadl:representation href="#topR1"/>
                <wadl:representation id="R2"/>
              </wadl:response>
            </wadl:method>
            <wadl:method id="POST" name="POST">
              <wadl:request>
                <wadl:param href="#GETP1"/>
                <wadl:representation href="#topR1"/> 
              </wadl:request>
            </wadl:method>
          </wadl:resource>
          <wadl:resource id="r2">
            <wadl:method href="#topM1"/>
            <wadl:param href="#topP1"/>
            <wadl:method href="#POST"/>
            <wadl:method name="PUT">
	            <wadl:request>
	              <wadl:representation href="#R2"/>
	            </wadl:request>
            </wadl:method>
          </wadl:resource>
        </wadl:resources>
        <wadl:method id="topM1"/>
        <wadl:param id="topP1"/>
        <wadl:representation id="topR1"/>
      </wadl:application>
    </x:context>
    
    <x:expect label="no top-level methods remain"
      test="count(wadl:application/wadl:method)=0"/>
    <x:expect label="first to a top-level method with an @id, inline with @id"
      test="//wadl:resource[@id='#r1']/wadl:method[1]/@id='#topM1'"/>
    <x:expect label="non-first to a top-level method with an @id, inline with @id"
      test="//wadl:resource[@id='#r2']/wadl:method[1]/@id='#topM1'"/>
    <x:expect label="to a non-top level method, inline with @id"
      test="//wadl:resource[@id='#r2']/wadl:method[2]/@id='#POST'"/>
      
    <x:expect label="no top-level params remain"
      test="count(wadl:application/wadl:param)=0"/>
    <x:expect label="first to a top-level param with an @id, inline with @id"
      test="//wadl:resource[@id='#r1']/wadl:param[1]/@id='#topP1'"/>
    <x:expect label="non-first to a top-level param with an @id, inline with @id"
      test="//wadl:resource[@id='#r2']/wadl:param[1]/@id='#topP1'"/>
    <x:expect label="to a non-top level param, inline with @id"
      test="//wadl:resource[@id='#r1']/wadl:method[@name='POST']/wadl:request[1]/wadl:param[1]/@id='#GETP1'"/>
      
    <x:expect label="no top-level representations remain"
      test="count(wadl:application/wadl:representation)=0"/>
    <x:expect label="first to a top-level representation with an @id, inline with @id"
      test="//wadl:resource[@id='#r1']//wadl:response[@status='200']/wadl:representation[1]/@id='#topR1'"/>
    <x:expect label="non-first to a top-level representation with an @id, inline with @id"
      test="//wadl:resource[@id='#r1']/wadl:method[@id='#POST']/wadl:request[1]/wadl:representation[1]/@id='#topR1'"/>
    <x:expect label="to a non-top level representation, inline with @id"
      test="//wadl:resource[@id='#r2']/wadl:method[@name='PUT']/wadl:request[1]/wadl:representation[1]/@id='#R2'"/>
  </x:scenario>
  
  <x:scenario label="When generating an id">
    <x:scenario label="and base and id are supplied">
      <x:call function="wadl:generate-id">
        <x:param select="'base'"/>
        <x:param select="'id'"/>
      </x:call>
      <x:expect label="return base and id separated by '#'">base#id</x:expect>
    </x:scenario>
    <x:scenario label="and id only is supplied">
      <x:call function="wadl:generate-id">
        <x:param select="''"/>
        <x:param select="'id'"/>
      </x:call>
      <x:expect label="return #id">#id</x:expect>
    </x:scenario>
    <x:scenario label="and only base is supplied">
      <x:call function="wadl:generate-id">
        <x:param select="'base'"/>
        <x:param select="''"/>
      </x:call>
      <x:expect label="return base#">base#</x:expect>
    </x:scenario>
    <x:scenario label="and neither is supplied">
      <x:call function="wadl:generate-id">
        <x:param select="''"/>
        <x:param select="''"/>
      </x:call>
      <x:expect label="return #">#</x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When checking local bases">
    <x:scenario label="of id whose base is not declared in the current document">
      <x:call function="wadl:has-local-base">
        <x:context id="f-has-local-base-context">
          <wadl:resources base="http://www.example.com"/>
          <wadl:resources base="http://x.com"/>
        </x:context>
        <x:param select="//x:context[@id='f-has-local-base-context']//wadl:resources/@base"/>
        <x:param select="'http://www.ex.com#r1'"/>
      </x:call>
      <x:expect label="expect false">false</x:expect>
    </x:scenario>
    <x:scenario label="of id whose base is declared in the current document">
      <x:call function="wadl:has-local-base">
        <x:param select="//x:context[@id='f-has-local-base-context']//wadl:resources/@base"/>
        <x:param select="'http://x.com#r1'"/>
      </x:call>
      <x:expect label="expect true">true</x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When checking for a trailing slash">
    <x:scenario label="and input has a trailing slash">
      <x:call function="wadl:strip-slash">
        <x:param select="'path/'"/>
      </x:call>
      <x:expect label="remove trailing slash"
        test="$x:result='path'"/>
    </x:scenario>
    <x:scenario label="and input does not have a trailing slash">
      <x:call function="wadl:strip-slash">
        <x:param select="'path'"/>
      </x:call>
      <x:expect label="return input as is"
        test="$x:result='path'"/>
    </x:scenario>
  </x:scenario>
</x:description>